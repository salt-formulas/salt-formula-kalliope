---
{%- from "kalliope/map.jinja" import server with context %}

{% macro get_default_engine(dict) -%}
{%- for key, value in dict.iteritems() %}
{%- if value.get('default', False) %}
{{- value.engine }}
{%- endif %}
{%- endfor %}
{%- endmacro %}

{% macro get_list(dict) -%}
{%- for key, value in dict.iteritems() %}
{%- if value.default is defined %}
{%- do value.pop('default') %}
{%- endif %}
- {{ value.engine }}:
{%- do value.pop('engine') %}
    {{ value|yaml(False)|indent(4) }}
{%- endfor %}
{%- endmacro %}

# This is the trigger that will catch your magic work to wake up Kalliope
default_trigger: "snowboy"

triggers:
- snowboy:
    pmdl_file: "{{ server.dir.triggers }}/kalliope.pmdl"

# This is the STT that will be used by default
default_speech_to_text: "{{ get_default_engine(server.speech_to_text) }}"

# Speech to text options
#recognition_options:
#  energy_threshold: 4000
#  adjust_for_ambient_noise_second: 1

speech_to_text:
{{ get_list(server.speech_to_text) }}

# This is the default TTS that will be used by Kalliope to talk.
default_text_to_speech: "{{ get_default_engine(server.text_to_speech) }}"

# where we store generated audio files from TTS engine to reuse them
cache_path: "/tmp/kalliope_tts_cache"

# Text to Spreech engines configuration
text_to_speech:
{{- get_list(server.text_to_speech) }}

#  - googletts:
#      language: "en"
#      cache: True
#  - voicerss:
#      language: "en-us"
#      cache: True

# This is the sound player that will be used by default
default_player: "{{ get_default_engine(server.player) }}"

# players configuration
players:
{{- get_list(server.player) }}

#  - pyaudioplayer:
#     convert_to_wav: True
#  - sounddeviceplayer:
#     convert_to_wav: True

# When Kalliope detect the hotword/trigger, he will select randomly a phrase
# in the following list to notify the user that he's listening for orders
random_wake_up_answers:
- "yes, sir?"
- "I'm listening"
- "sir?"
- "how can I help you?"

# The file must be .wav or .mp3 format.
#random_wake_up_sounds:
# - "trigger/dong.wav"
# - "/my/personal/full/path/my_file.mp3"

# This section is used to notify the user when Kalliope is waiting for a
# trigger detection by playing a sound or speak a sentence out loud

# This parameter define if you play the on ready answer:
# - always: every time Kalliope is ready to be awaken
# - never: never play a sound or sentences when kalliope is ready
# - once: at the first start of Kalliope
play_on_ready_notification: "once"

# The on ready notification can be a sentence. Place here a sentence or a list of sentence. If you set a list, one sentence will be picked up randomly
on_ready_answers:
- "awaiting your orders"
- "at your command"

# You can play a sound instead of a sentence.
# Remove the `on_ready_answers` parameters by commenting it out and use this one instead.
# Place here the path of the sound file. Files must be .wav or .mp3 format.
#on_ready_sounds:
#- "sounds/ding.wav"
#- "sounds/dong.wav"

rest_api:
  active: True
  port: {{ server.bind.port }}
  {%- if server.auth.username is defined %}
  password_protected: True
  login: {{ server.auth.username }}
  password: {{ server.auth.password }}
  {%- else %}
  password_protected: False
  {%- endif %}
  allowed_cors_origin: "*"

# Specify an optional default synapse response in case your order is not
# found.
default_synapse: "default-synapse"

resource_directory:
  neuron: "{{ server.dir.resources }}/neuron"
  stt: "{{ server.dir.resources }}/stt"
  tts: "{{ server.dir.resources }}/tts"
  signal: "{{ server.dir.resources }}/signal"
  trigger: "{{ server.dir.resources }}/trigger"

var_files:
- {{ server.dir.config }}/variables.yml

#rpi:
#  pin_mute_button: 24
#  pin_led_started: 23
#  pin_led_muted: 17
#  pin_led_talking: 27
#  pin_led_listening: 22
